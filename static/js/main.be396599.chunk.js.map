{"version":3,"sources":["redux/store/hashReducer.tsx","redux/store/index.tsx","components/Hash/Hash.tsx","components/Hashes/Hashes.tsx","api/api.ts","components/App/App.tsx","index.tsx"],"names":["ADD","REMOVE","ADD_ARRAY","actions","hash","balance","type","store","hashReducer","state","action","filter","createStore","subscribe","localStorage","JSON","stringify","getState","Hash","dispatch","useDispatch","className","aria-label","onClick","hashKey","Hashes","hashes","map","uuidv4","RpcRrl","TezosToolkit","getBalance","key","a","tz","response","toNumber","content","App","useSelector","useState","validHash","setValidHash","textInput","createRef","useEffect","getItem","parse","addHash","duplicate","find","length","classNames","ref","onChange","placeholder","aria-describedby","current","value","render","document","getElementById"],"mappings":"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","file":"static/js/main.be396599.chunk.js","sourcesContent":["const ADD = 'ADD';\nconst REMOVE = 'REMOVE';\nconst ADD_ARRAY = 'ADD_ARRAY';\n\nexport const actions = {\n  add: (hash: string, balance: number) => ({ type: ADD, hash, balance }),\n  remove: (hash: string) => ({ type: REMOVE, hash }),\n  storage: (store: HashKeysAndBalance[]) => ({ type: ADD_ARRAY, store }),\n};\n\nexport const hashReducer = (state: HashKeysAndBalance[] = [], action: Action) => {\n  switch (action.type) {\n    case ADD:\n      return [{ hash: action.hash, balance: action.balance }, ...state];\n    case REMOVE:\n      return state.filter(hash => (\n        hash.hash !== action.hash\n      ));\n    case ADD_ARRAY:\n      return [...action.store];\n    default:\n      return state;\n  }\n};\n\nexport default hashReducer;\n","import { createStore } from 'redux';\nimport { hashReducer } from './hashReducer';\n\nconst store = createStore(hashReducer);\n\nstore.subscribe(() => {\n  localStorage['hash-store'] = JSON.stringify(store.getState());\n});\n\nexport default store;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { actions } from '../../redux/store/hashReducer';\nimport './Hash.scss';\n\ninterface Props {\n  hash: HashKeysAndBalance;\n}\n\nexport const Hash: React.FC<Props> = ({ hash }) => {\n  const dispatch = useDispatch();\n\n  const removeHash = (hashKey: string) => {\n    dispatch(actions.remove(hashKey));\n  };\n\n  return (\n    <>\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">\n            {hash.hash}\n          </h5>\n          <h5 className=\"card-title\">\n            {hash.balance}\n          </h5>\n          <button\n            type=\"button\"\n            className=\"btn-close\"\n            aria-label=\"Close\"\n            onClick={() => removeHash(hash.hash)}\n          >\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Hash;\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Hash } from '../Hash/Hash';\nimport './Hashes.scss';\n\ninterface Props {\n  hashes: HashKeysAndBalance[];\n}\n\nconst Hashes: React.FC<Props> = ({ hashes }) => {\n  return (\n    <>\n      {hashes.map((hash: HashKeysAndBalance) => <Hash hash={hash} key={uuidv4()} />)}\n    </>\n  );\n};\n\nexport default Hashes;\n","import { TezosToolkit } from '@taquito/taquito';\n\nconst RpcRrl = new TezosToolkit('https://mainnet-node.madfish.solutions');\n\nexport const getBalance = async (key: string): Promise<number> => {\n  const response = await RpcRrl.tz.getBalance(key);\n  const content = await response.toNumber();\n\n  return content;\n};\n","import React, { useState, createRef, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { actions } from '../../redux/store/hashReducer';\nimport Hashes from '../Hashes/Hashes';\nimport { getBalance } from '../../api/api';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const dispatch = useDispatch();\n  const hashes = useSelector((state: HashKeysAndBalance[]) => state);\n\n  const [validHash, setValidHash] = useState(false);\n  const textInput = createRef<HTMLInputElement>();\n\n  useEffect(() => {\n    const store = localStorage.getItem('hash-store');\n\n    if (store) {\n      dispatch(actions.storage(JSON.parse(store)));\n    }\n  }, []);\n\n  const addHash = async (hash: string) => {\n    const duplicate = hashes.find(hashKey => hashKey.hash === hash);\n\n    if (hash.length === 36 && !duplicate) {\n      const response = await getBalance(hash);\n\n      dispatch(actions.add(hash, response));\n\n      setValidHash(false);\n\n      return;\n    }\n\n    setValidHash(true);\n  };\n\n  return (\n    <form className=\"form\">\n      <div className=\"input-group mb-1\">\n        <input\n          type=\"text\"\n          className={classNames('form-control', { 'invalid-hash': validHash })}\n          ref={textInput}\n          onChange={() => {\n            setValidHash(false);\n          }}\n          placeholder=\"Enter the KeyHash..\"\n          aria-label=\"Recipient's username\"\n          aria-describedby=\"basic-addon2\"\n        />\n        <div className=\"input-group-append\">\n          <button\n            className=\"btn btn-outline-secondary btn-block\"\n            type=\"button\"\n            onClick={() => {\n              if (textInput.current?.value) {\n                addHash(textInput.current.value);\n                textInput.current.value = '';\n              }\n            }}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n      {validHash && (\n        <div className=\"valid-hash\">Enter a valid hash</div>\n      )}\n      {hashes.length\n        ? <Hashes hashes={hashes} />\n        : <div className=\"hashes-not-entered\">hash keys were not entered</div>}\n    </form>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { App } from './components/App/App';\nimport './index.scss';\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}